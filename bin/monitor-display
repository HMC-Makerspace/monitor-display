#!/bin/bash


usage() { echo "Usage: $0 [-d <dpi>] [-q <quality%>] [-y <delay>] filename.pdf" 1>&2; exit 0; }

density=144
quality=90
delay=1

# Check for magick properties
while getopts "d:q:y:" opt; do
	case $opt in
		d)
			density=${OPTARG}
			;;
		q)
			quality=${OPTARG}
			;;
		y)
			delay=${OPTARG}
			;;
		\?)
			usage
			;;
	esac
done
# Remove options from argument
shift "$((OPTIND-1))"

# Fail if no input
if [ "$#" -eq 0 ]; then
	echo "* Error: no pdf input provided. Please include a single PDF file as an argument."
	exit 1
fi

echo "*** Updating Makerspace Displays ***"

SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
HOSTS_FILENAME="raspi_hosts.txt"
HOSTS_PATH="$SCRIPT_DIR/$HOSTS_FILENAME"
if [ -f "$HOSTS_PATH" ]; then
	echo "* $HOSTS_FILENAME found, reading..."
else
	echo "* Error: no file found at $HOSTS_PATH."
	echo "* Please create a $HOSTS_FILENAME file in $SCRIPT_DIR with space-separated"
	echo "* host information for each Raspberry Pi, such as \"makerspace@172.28.0.1\""
	exit 1
fi
HOSTS=$(cat "$HOSTS_PATH")
if [ -z "$HOSTS" ]; then
	echo "* Error: $HOSTS_FILENAME file found in $SCRIPT_DIR is empty."
	echo "* Please enter space-separated host information for each Raspberry Pi,"
	echo "* such as \"makerspace@172.28.0.1 makerspace@172.28.0.2\""
	exit 1
fi

echo "* Converting $1 to jpgs..."

magick -density $density -quality $quality "$1" makerspace-display-%01d.jpg

echo "* Conversion complete."

find . -name "makerspace-display*.jpg" | xargs zip makerspace-display.zip
find . -name "makerspace-display*.jpg" | xargs rm

echo "* Created zip archive."

for i in $HOSTS; do
	echo "* Transfering zip to $i..."
	scp makerspace-display.zip $i:~/Pictures
	ssh $i "cd Pictures; rm *.jpg; unzip makerspace-display.zip"
done

SCHEDULED_TIME=$(date -v +"$delay"M "+%H:%M")

for i in $HOSTS; do
	echo "* Restarting $i..."
	ssh $i "echo \"cd Pictures; sudo killall fbi; sudo fbi --noverbose -a -t 20 -T 1 *.jpg\" | at $SCHEDULED_TIME"
done

rm makerspace-display.zip

echo "*** Finished! ***"

